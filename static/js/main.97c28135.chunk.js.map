{"version":3,"sources":["component/Popupimage.js","component/Game.js","component/StopWatch.js","component/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["backdrop","visible","opacity","hidden","modal","y","zIndex","transition","delay","Popupimage","useState","showModal","setShowModal","onCloseModal","ref","useOnclickOutside","exitBeforeEnter","className","onClick","div","variants","initial","animate","exit","onClose","src","alt","Game","newPuzzle","setNewPuzzle","solvePuzzle","setSolvePuzzle","maxIterations","image","size","StopWatch","timer","setTimer","isActive","setIsActive","isPaused","setIsPaused","increment","useRef","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","formatTime","clearInterval","current","setInterval","disabled","Footer","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAKMA,G,MAAW,CACbC,QAAQ,CAACC,QAAS,GAClBC,OAAO,CAACD,QAAS,KAEfE,EAAM,CACRD,OAAO,CAACE,EAAE,SAASH,QAAQ,GAC3BD,QAAQ,CAACI,EAAE,QAAQH,QAAQ,EAAEI,OAAO,MAAMC,WAAW,CAACC,MAAM,MA0CjDC,MAxCf,WAAuB,IAAD,EACeC,oBAAS,GADxB,mBACXC,EADW,KACDC,EADC,KAGVC,EAAe,WACnBD,GAAa,IAMXE,EAAMC,aAAkB,WAC1BF,OAGJ,OACI,eAAC,IAAD,CAAiBG,iBAAe,EAAhC,UACE,wBAAQC,UAAU,MAAMC,QAVV,WAChBN,GAAcD,IASZ,2BAEMA,GACI,cAAC,IAAOQ,IAAR,CAAYF,UAAU,WACnBG,SAAUpB,EACVqB,QAAQ,SACRC,QAAQ,UACRC,KAAK,SAJR,SAKI,cAAC,IAAOJ,IAAR,CAAYF,UAAU,QACtBG,SAAUhB,EACVoB,QAASX,EACTC,IAAKA,EAHL,SAKA,qBAAKG,UAAU,SAAf,SACI,qBAAKQ,IAAI,8FAA8FC,IAAI,eCMxHC,G,MA5CA,WAAO,IAAD,EACiBjB,oBAAS,GAD1B,mBACRkB,EADQ,KACEC,EADF,OAEqBnB,oBAAS,GAF9B,mBAERoB,EAFQ,KAEIC,EAFJ,KAYb,OACI,sBAAKd,UAAU,eAAf,UAEA,sBAAKA,UAAU,cAAf,UACI,wBACOA,UAAU,MACTC,QAVS,WACzBW,GAAcD,IAON,wBAOD,cAAC,EAAD,OAIH,cAAC,IAAD,CACIE,YAAaA,EACbF,UAAWA,EACXI,cAAe,IACfC,MAAM,8FACNC,KAAM,MAEN,wBACKjB,UAAU,MACXC,QAhCiB,WAC7Ba,GAAgBD,IA6BR,+BCwBDK,G,MA5DG,WAAO,IAAD,EACIzB,mBAAS,GADb,mBACf0B,EADe,KACRC,EADQ,OAEU3B,oBAAS,GAFnB,mBAEf4B,EAFe,KAELC,EAFK,OAGU7B,oBAAS,GAHnB,mBAGf8B,EAHe,KAGLC,EAHK,KAIhBC,EAAYC,iBAAO,MAsCzB,OACI,sBAAK1B,UAAU,iBAAf,UACE,4BAXa,WACjB,IAAM2B,EAAa,WAAKR,EAAQ,IAAMS,OAAO,GACvCC,EAAO,UAAMC,KAAKC,MAAMZ,EAAQ,KAChCa,EAAa,WAAIH,EAAU,IAAKD,OAAO,GACvCK,EAAW,WAAIH,KAAKC,MAAMZ,EAAQ,OAAQS,OAAO,GAEvD,MAAM,GAAN,OAAUK,EAAV,cAAwBD,EAAxB,cAAwCL,GAKhCO,KACJ,sBAAKlC,UAAU,UAAf,UAEKqB,GAAaE,EAGVA,EAAW,wBAASvB,UAAU,OAAOC,QApC/B,WAClBkC,cAAcV,EAAUW,SACxBZ,GAAY,IAkCW,mBACT,wBAASxB,UAAU,OAAOC,QAhCrB,WACnBuB,GAAY,GACZC,EAAUW,QAAUC,aAAY,WAC9BjB,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,MA4BW,oBAHJ,wBAASnB,UAAU,OAAOC,QA1ClB,WAClBqB,GAAY,GACZE,GAAY,GACZC,EAAUW,QAAUC,aAAY,WAC9BjB,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,MAqCO,mBAMJ,wBAAQnB,UAAU,OAAOC,QA5Bb,WAClBkC,cAAcV,EAAUW,SACxBd,GAAY,GACZE,GAAY,GACZJ,EAAS,IAwB4CkB,UAAWjB,EAA1D,2B,OCtCKkB,G,MAdA,WAEX,OACI,mCACI,qDACA,+BACI,mBAAGC,KAAK,6BAAR,SACI,cAAC,IAAD,aCKLC,EAXH,WACV,OACE,gCAEE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.97c28135.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport {motion,AnimatePresence} from \"framer-motion\"\r\nimport useOnclickOutside from 'react-cool-onclickoutside'\r\nimport './Moodal.css'\r\n\r\nconst backdrop = {\r\n    visible:{opacity: 1},\r\n    hidden:{opacity: 0}\r\n}\r\nconst modal={\r\n    hidden:{y:'-100vh',opacity:0},\r\n    visible:{y:'150px',opacity:1,zIndex:'100',transition:{delay:0.5}}\r\n}\r\nfunction Popupimage() {\r\n    const [showModal,setShowModal] = useState(false)\r\n\r\n      const onCloseModal = () => {\r\n        setShowModal(false);\r\n      };\r\n      const clickshow = ()=>{\r\n        setShowModal(!showModal);\r\n      }\r\n \r\n    const ref = useOnclickOutside(()=>{\r\n        onCloseModal();\r\n    })\r\n\r\n    return (\r\n        <AnimatePresence exitBeforeEnter>\r\n          <button className='btn' onClick={clickshow}>Orginal Image</button>\r\n            {\r\n                showModal && (\r\n                    <motion.div className=\"backdrop\"\r\n                       variants={backdrop}\r\n                       initial='hidden'\r\n                       animate='visible'\r\n                       exit='hidden'>\r\n                        <motion.div className=\"modal\"\r\n                        variants={modal}\r\n                        onClose={onCloseModal}\r\n                        ref={ref}\r\n                        >\r\n                        <div className='imgDiv'>\r\n                            <img src='https://i.pinimg.com/736x/1f/b3/8e/1fb38ea391f7d125723ba0180abfed00--james-lee-cat-doll.jpg' alt=''/>\r\n                        </div>\r\n                        </motion.div>\r\n                    </motion.div>\r\n        \r\n                )\r\n            }\r\n        </AnimatePresence>\r\n    )\r\n}\r\nexport default Popupimage\r\n","    import React, { useState } from 'react';\r\n    import SlidingTilePuzzle from 'react-sliding-tile-puzzle';\r\n    import Popupimage from './Popupimage'\r\n    import './Game.css'\r\n\r\n  const Game = () => {\r\n      const [newPuzzle,setNewPuzzle]= useState(false)\r\n      const [solvePuzzle,setSolvePuzzle]= useState(false)\r\n\r\n      const handleClickSolvePuzzle = () => {\r\n        setSolvePuzzle(!solvePuzzle)\r\n    };\r\n    \r\n    const handleClickNewPuzzle = () => {\r\n        setNewPuzzle(!newPuzzle)\r\n    };\r\n \r\n        return (\r\n            <div className=\"game-wrapper\">\r\n            \r\n            <div className='btn-wrapper'>\r\n                <button\r\n                       className='btn'\r\n                        onClick={handleClickNewPuzzle}\r\n                    >\r\n                        New Puzzle\r\n                </button>\r\n                          \r\n               <Popupimage/>\r\n            \r\n            </div>\r\n            \r\n            <SlidingTilePuzzle\r\n                solvePuzzle={solvePuzzle}\r\n                newPuzzle={newPuzzle}\r\n                maxIterations={300}\r\n                image=\"https://i.pinimg.com/736x/1f/b3/8e/1fb38ea391f7d125723ba0180abfed00--james-lee-cat-doll.jpg\"\r\n                size={350}\r\n            />\r\n                <button\r\n                     className='btn'\r\n                    onClick={handleClickSolvePuzzle}\r\n                >\r\n                    Solve Puzzle\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n \r\nexport default Game;","import React, { useState, useRef } from 'react';\r\nimport './StopWatch.css';\r\n\r\nconst StopWatch = () => {\r\n  const [timer, setTimer] = useState(0)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [isPaused, setIsPaused] = useState(false)\r\n  const increment = useRef(null)\r\n\r\n  const handleStart = () => {\r\n    setIsActive(true)\r\n    setIsPaused(true)\r\n    increment.current = setInterval(() => {\r\n      setTimer((timer) => timer + 1)\r\n    }, 1000)\r\n  }\r\n\r\n  const handlePause = () => {\r\n    clearInterval(increment.current)\r\n    setIsPaused(false)\r\n  }\r\n\r\n  const handleResume = () => {\r\n    setIsPaused(true)\r\n    increment.current = setInterval(() => {\r\n      setTimer((timer) => timer + 1)\r\n    }, 1000)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    clearInterval(increment.current)\r\n    setIsActive(false)\r\n    setIsPaused(false)\r\n    setTimer(0)\r\n  }\r\n\r\n  const formatTime = () => {\r\n    const getSeconds = `0${(timer % 60)}`.slice(-2)\r\n    const minutes = `${Math.floor(timer / 60)}`\r\n    const getMinutes = `0${minutes % 60}`.slice(-2)\r\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2)\r\n\r\n    return `${getHours} : ${getMinutes} : ${getSeconds}`\r\n  }\r\n\r\n  return (\r\n      <div className='stopwatch-card'>\r\n        <p>{formatTime()}</p>\r\n        <div className='buttons'>\r\n          {\r\n            !isActive && !isPaused ?\r\n              <button  className='btn1' onClick={handleStart}>Start</button>\r\n              : (\r\n                isPaused ? <button  className='btn1' onClick={handlePause}>Pause</button> :\r\n                  <button  className='btn1' onClick={handleResume}>Resume</button>\r\n              )\r\n          }\r\n          <button className='btn1' onClick={handleReset} disabled={!isActive}>Reset</button>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default StopWatch;","import React from 'react'\r\nimport {AiFillGithub} from 'react-icons/ai'\r\n// import {Link} from 'react-router-dom'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n   \r\n    return (\r\n        <footer>\r\n            <p>Visit My Github Page</p>\r\n            <span>\r\n                <a href='https://github.com/ronyfr3'>\r\n                    <AiFillGithub/>\r\n                </a>\r\n            </span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\nimport Game from './component/Game'\nimport StopWatch from './component/StopWatch'\nimport Footer from './component/Footer'\n\n\nconst App = () => {\n  return (\n    <div>\n\n      <Game/>\n      <StopWatch/>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}